{"ast":null,"code":"var _jsxFileName = \"/home/minorvar/B6104320-Project/frontend/src/Pages/LoginPage.js\";\nimport React from \"react\";\nimport makeToast from \"../Toaster\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Layout from \"./components/layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  const emailRef = /*#__PURE__*/React.createRef();\n  const passwordRef = /*#__PURE__*/React.createRef();\n\n  const loginUser = () => {\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    axios.post(\"http://localhost:8000/user/login\", {\n      email,\n      password\n    }).then(response => {\n      makeToast(\"success\", response.data.message);\n      localStorage.setItem(\"CC_Token\", response.data.token);\n      props.history.push(\"/dashboard\");\n      props.setupSocket();\n    }).catch(err => {\n      if (err && err.response && err.response.data && err.response.data.message) makeToast(\"error\", err.response.data.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardHeader\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"abc@example.com\",\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Your Password\",\n            ref: passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loginUser,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginPage;\nexport default _c2 = withRouter(LoginPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/minorvar/B6104320-Project/frontend/src/Pages/LoginPage.js"],"names":["React","makeToast","axios","withRouter","Layout","LoginPage","props","emailRef","createRef","passwordRef","loginUser","email","current","value","password","post","then","response","data","message","localStorage","setItem","token","history","push","setupSocket","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,gBAAGP,KAAK,CAACQ,SAAN,EAAjB;AACA,QAAMC,WAAW,gBAAGT,KAAK,CAACQ,SAAN,EAApB;;AAEA,QAAME,SAAS,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAA/B;AACA,UAAMC,QAAQ,GAAGL,WAAW,CAACG,OAAZ,CAAoBC,KAArC;AAEAX,IAAAA,KAAK,CACFa,IADH,CACQ,kCADR,EAC4C;AACxCJ,MAAAA,KADwC;AAExCG,MAAAA;AAFwC,KAD5C,EAKGE,IALH,CAKSC,QAAD,IAAc;AAClBhB,MAAAA,SAAS,CAAC,SAAD,EAAYgB,QAAQ,CAACC,IAAT,CAAcC,OAA1B,CAAT;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,QAAQ,CAACC,IAAT,CAAcI,KAA/C;AACAhB,MAAAA,KAAK,CAACiB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACAlB,MAAAA,KAAK,CAACmB,WAAN;AACD,KAVH,EAWGC,KAXH,CAWUC,GAAD,IAAS;AAEd,UACEA,GAAG,IACHA,GAAG,CAACV,QADJ,IAEAU,GAAG,CAACV,QAAJ,CAAaC,IAFb,IAGAS,GAAG,CAACV,QAAJ,CAAaC,IAAb,CAAkBC,OAJpB,EAMElB,SAAS,CAAC,OAAD,EAAU0B,GAAG,CAACV,QAAJ,CAAaC,IAAb,CAAkBC,OAA5B,CAAT;AACH,KApBH;AAqBD,GAzBD;;AA2BA,sBACE,QAAC,MAAD;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,EAAE,EAAC,OAHL;AAIE,YAAA,WAAW,EAAC,iBAJd;AAKE,YAAA,GAAG,EAAEZ;AALP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,EAAE,EAAC,UAHL;AAIE,YAAA,WAAW,EAAC,eAJd;AAKE,YAAA,GAAG,EAAEE;AALP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAqBE;AAAQ,UAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA7DD;;KAAML,S;AA+DN,qBAAeF,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport makeToast from \"../Toaster\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Layout from \"./components/layout\";\n\n\nconst LoginPage = (props) => {\n  const emailRef = React.createRef();\n  const passwordRef = React.createRef();\n\n  const loginUser = () => {\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    axios\n      .post(\"http://localhost:8000/user/login\", {\n        email,\n        password,\n      })\n      .then((response) => {\n        makeToast(\"success\", response.data.message);\n        localStorage.setItem(\"CC_Token\", response.data.token);\n        props.history.push(\"/dashboard\");\n        props.setupSocket();\n      })\n      .catch((err) => {\n        \n        if (\n          err &&\n          err.response &&\n          err.response.data &&\n          err.response.data.message\n        )\n          makeToast(\"error\", err.response.data.message);\n      });\n  };\n\n  return (\n    <Layout>\n    <div className=\"card\">\n      <div className=\"cardHeader\">Login</div>\n      <div className=\"cardBody\">\n        <div className=\"inputGroup\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"abc@example.com\"\n            ref={emailRef}\n          />\n        </div>\n        <div className=\"inputGroup\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Your Password\"\n            ref={passwordRef}\n          />\n        </div>\n        <button onClick={loginUser}>Login</button>\n      </div>\n    </div>\n    </Layout>\n  );\n};\n\nexport default withRouter(LoginPage);\n"]},"metadata":{},"sourceType":"module"}