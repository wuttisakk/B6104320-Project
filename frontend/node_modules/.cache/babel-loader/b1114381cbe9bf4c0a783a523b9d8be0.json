{"ast":null,"code":"var _jsxFileName = \"/home/minorvar/B6104320-Project/frontend/src/Pages/ChatroomPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Layout from \"../components/layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatroomPage = ({\n  match,\n  socket\n}) => {\n  _s();\n\n  const chatroomId = match.params.id;\n  const [messages, setMessages] = React.useState([]);\n  const messageRef = React.useRef();\n  const [userId, setUserId] = React.useState(\"\");\n\n  const sendMessage = () => {\n    if (socket) {\n      socket.emit(\"chatroomMessage\", {\n        chatroomId,\n        message: messageRef.current.value\n      });\n      messageRef.current.value = \"\";\n    }\n  };\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"CC_Token\");\n\n    if (token) {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      setUserId(payload.id);\n    }\n\n    if (socket) {\n      socket.on(\"newMessage\", message => {\n        const newMessages = [...messages, message];\n        setMessages(newMessages);\n      });\n    } //eslint-disable-next-line\n\n  }, [messages]);\n  React.useEffect(() => {\n    if (socket) {\n      socket.emit(\"joinRoom\", {\n        chatroomId\n      });\n    }\n\n    return () => {\n      //Component Unmount\n      if (socket) {\n        socket.emit(\"leaveRoom\", {\n          chatroomId\n        });\n      }\n    }; //eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroomPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroomSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardHeader\",\n          children: \"Chatroom Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatroomContent\",\n          children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: userId === message.userId ? \"ownMessage\" : \"otherMessage\",\n              children: [message.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), \" \", message.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatroomActions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"message\",\n              placeholder: \"Say something!\",\n              ref: messageRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"join\",\n              onClick: sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatroomPage, \"cSCaNH5KP7BuPWSoVMllUfyKFKs=\");\n\n_c = ChatroomPage;\nexport default _c2 = withRouter(ChatroomPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatroomPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/minorvar/B6104320-Project/frontend/src/Pages/ChatroomPage.js"],"names":["React","withRouter","Layout","ChatroomPage","match","socket","chatroomId","params","id","messages","setMessages","useState","messageRef","useRef","userId","setUserId","sendMessage","emit","message","current","value","useEffect","token","localStorage","getItem","payload","JSON","parse","atob","split","on","newMessages","map","i","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Layout from \"../components/layout\";\n\nconst ChatroomPage = ({ match, socket }) => {\n  const chatroomId = match.params.id;\n  const [messages, setMessages] = React.useState([]);\n  const messageRef = React.useRef();\n  const [userId, setUserId] = React.useState(\"\");\n\n  const sendMessage = () => {\n    if (socket) {\n      socket.emit(\"chatroomMessage\", {\n        chatroomId,\n        message: messageRef.current.value,\n      });\n\n      messageRef.current.value = \"\";\n    }\n  };\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"CC_Token\");\n    if (token) {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      setUserId(payload.id);\n    }\n    if (socket) {\n      socket.on(\"newMessage\", (message) => {\n        const newMessages = [...messages, message];\n        setMessages(newMessages);\n      });\n    }\n    //eslint-disable-next-line\n  }, [messages]);\n\n  React.useEffect(() => {\n    if (socket) {\n      socket.emit(\"joinRoom\", {\n        chatroomId,\n      });\n    }\n\n    return () => {\n      //Component Unmount\n      if (socket) {\n        socket.emit(\"leaveRoom\", {\n          chatroomId,\n        });\n      }\n    };\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"chatroomPage\">\n        <div className=\"chatroomSection\">\n          <div className=\"cardHeader\">Chatroom Name</div>\n          <div className=\"chatroomContent\">\n            {messages.map((message, i) => (\n              <div key={i} className=\"message\">\n                <span\n                  className={\n                    userId === message.userId ? \"ownMessage\" : \"otherMessage\"\n                  }\n                >\n                  {message.name}:\n                </span>{\" \"}\n                {message.message}\n              </div>\n            ))}\n          </div>\n          <div className=\"chatroomActions\">\n            <div>\n              <input\n                type=\"text\"\n                name=\"message\"\n                placeholder=\"Say something!\"\n                ref={messageRef}\n              />\n            </div>\n            <div>\n              <button className=\"join\" onClick={sendMessage}>\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default withRouter(ChatroomPage);\n"]},"metadata":{},"sourceType":"module"}